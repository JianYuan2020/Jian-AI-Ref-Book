.. _content-based-recommendations-label:

Content Based Recommendations
=============================

	Example: Predicting movie ratings. Let's define:

	* :math:`n_{u}` = number of users
	* :math:`n_{m}` = number of movies
	* :math:`n` = number of features for movies
	* :math:`r(i, j)` = 1 if user :math:`j` has rated movie :math:`i` (0 otherwise)
	* :math:`y^{(i, j)}` = rating given by user :math:`j` to movie :math:`i` (defined only if :math:`r(i, j)` = 1)
	* :math:`\theta^{(j)}` = parameter vector for user :math:`j`, :math:`\theta^{(j)} \in \mathbb {R^{n + 1}}`
	* :math:`x^{(i)}` = feature vector for movie :math:`i`, :math:`x^{(i)} \in \mathbb {R^{n + 1}}`

	For user :math:`j`, movie :math:`i`, predicted rating: :math:`(\theta^{(j)})^{T} (x^{(i)})`

	These are essentially the same as :ref:`linear-regression-label`.

To learn :math:`\theta^{(1)}, ..., \theta^{(n_{u})}`:
-----------------------------------------------------

Cost Function
^^^^^^^^^^^^^

	:math:`J(\Theta) = \frac{1}{2} \sum_{j=1}^{n_{u}} \sum_{i:r(i, j)=1}^{} ((\theta^{(j)})^{T} x^{(i)} - y^{(i, j)})^2 + 
	\frac{\lambda}{2} \sum_{j=1}^{n_{u}} \sum_{k=1}^{n} (\theta_{k}^{(j)})^2`

Gradient Descent
^^^^^^^^^^^^^^^^

	:math:`\theta_{k}^{(j)} = \theta_{k}^{(j)} - \alpha \frac{\partial }{\partial \theta_{k}^{(j)}} J(\Theta)`

	:math:`\theta_{k}^{(j)} = \theta_{k}^{(j)} - \alpha \sum_{i:r(i, j)=1}^{} ((\theta^{(j)})^{T} x^{(i)} - y^{(i, j)}) x^{(i)}_{k}` (for :math:`k = 0`)

	:math:`\theta_{k}^{(j)} = \theta_{k}^{(j)} - \alpha (\sum_{i:r(i, j)=1}^{} ((\theta^{(j)})^{T} x^{(i)} - y^{(i, j)}) x^{(i)}_{k} + \lambda \theta^{(j)}_{k} )` (for :math:`k <> 0`)


